// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tester.Integration.EfCore2
{
    // EventProcessorEventFilter
    public class EventProcessorEventFilterConfiguration : IEntityTypeConfiguration<EventProcessorEventFilter>
    {
        public void Configure(EntityTypeBuilder<EventProcessorEventFilter> builder)
        {
            builder.ToTable("EventProcessorEventFilter", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_EventProcessorEventFilter").ForSqlServerIsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseSqlServerIdentityColumn();
            builder.Property(x => x.EventProcessorId).HasColumnName(@"EventProcessorId").HasColumnType("int").IsRequired();
            builder.Property(x => x.WantedEventId).HasColumnName(@"WantedEventId").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.EventProcessor).WithMany(b => b.EventProcessorEventFilters).HasForeignKey(c => c.EventProcessorId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_EventProcessorEventFilter__EventProcessor");

            builder.HasIndex(x => new { x.EventProcessorId, x.WantedEventId }).HasName("IX_EventProcessorEventFilter").IsUnique();
        }
    }

}
// </auto-generated>
