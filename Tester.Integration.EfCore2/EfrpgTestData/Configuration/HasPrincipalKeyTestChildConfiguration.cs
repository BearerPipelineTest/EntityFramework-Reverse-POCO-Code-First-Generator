// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tester.Integration.EfCore2
{
    // HasPrincipalKeyTestChild
    public class HasPrincipalKeyTestChildConfiguration : IEntityTypeConfiguration<HasPrincipalKeyTestChild>
    {
        public void Configure(EntityTypeBuilder<HasPrincipalKeyTestChild> builder)
        {
            builder.ToTable("HasPrincipalKeyTestChild", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_HasPrincipalKeyTestChild").ForSqlServerIsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseSqlServerIdentityColumn();
            builder.Property(x => x.A).HasColumnName(@"A").HasColumnType("int").IsRequired();
            builder.Property(x => x.B).HasColumnName(@"B").HasColumnType("int").IsRequired();
            builder.Property(x => x.C).HasColumnName(@"C").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.D).HasColumnName(@"D").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.HasPrincipalKeyTestParent_A).WithOne(b => b.HasPrincipalKeyTestChild).HasPrincipalKey<HasPrincipalKeyTestParent>(p => new { p.Aa, p.Bb }).HasForeignKey<HasPrincipalKeyTestChild>(c => new { c.A, c.B }).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_HasPrincipalKey_AB");
            builder.HasOne(a => a.HasPrincipalKeyTestParent_C).WithMany(b => b.HasPrincipalKeyTestChilds_C).HasPrincipalKey(p => p.Cc).HasForeignKey(c => c.C).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_HasPrincipalKey_AC");
            builder.HasOne(a => a.HasPrincipalKeyTestParent_D).WithMany(b => b.HasPrincipalKeyTestChilds_D).HasPrincipalKey(p => p.Dd).HasForeignKey(c => c.D).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_HasPrincipalKey_CD");
        }
    }

}
// </auto-generated>
