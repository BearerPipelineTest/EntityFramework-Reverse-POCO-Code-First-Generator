// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.co.uk/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Registered to: Simon Hughes
// Company      : Reverse POCO
// Licence Type : Commercial
// Licences     : 1
// Valid until  : 15 DEC 2022
//
// The following connection settings were used to generate this file:
//     Connection String Name: "FredDbContext"
//     Connection String:      "Data Source=(local);Initial Catalog=Fred;Integrated Security=True"
//
// Database Edition       : Developer Edition (64-bit)
// Database Engine Edition: Enterprise
// Database Version       : 14.0.2037.2
//
// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace V3Fred
{
    // StockPrediction
    public class StockPredictionConfiguration : IEntityTypeConfiguration<StockPrediction>
    {
        public void Configure(EntityTypeBuilder<StockPrediction> builder)
        {
            builder.ToTable("StockPrediction", "dbo");
            builder.HasKey(x => x.Id).HasName("PK__StockPre__3213E83FFBA52754").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Name).HasColumnName(@"name").HasColumnType("varchar(50)").IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Date).HasColumnName(@"date").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.Open).HasColumnName(@"open").HasColumnType("decimal(10,4)").IsRequired();
            builder.Property(x => x.High).HasColumnName(@"high").HasColumnType("decimal(10,4)").IsRequired();
            builder.Property(x => x.Low).HasColumnName(@"low").HasColumnType("decimal(10,4)").IsRequired();
            builder.Property(x => x.Close).HasColumnName(@"close").HasColumnType("decimal(10,4)").IsRequired();
            builder.Property(x => x.AdjClose).HasColumnName(@"adj_close").HasColumnType("decimal(10,4)").IsRequired();
            builder.Property(x => x.Volume).HasColumnName(@"volume").HasColumnType("int").IsRequired();
            builder.Property(x => x.Buy).HasColumnName(@"buy").HasColumnType("bit").IsRequired(false);
        }
    }

}
// </auto-generated>
