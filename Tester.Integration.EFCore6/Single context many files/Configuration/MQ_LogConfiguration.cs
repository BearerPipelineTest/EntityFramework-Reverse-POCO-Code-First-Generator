// <auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tester.Integration.EFCore6.Single_context_many_files
{
    // Logs
    public class MQ_LogConfiguration : IEntityTypeConfiguration<MQ_Log>
    {
        public void Configure(EntityTypeBuilder<MQ_Log> builder)
        {
            builder.ToTable("Logs", "MQ");
            builder.HasKey(x => x.Id).HasName("PK_MQ_Logs").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ImpersonatingUserId).HasColumnName(@"ImpersonatingUserId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.ImpersonatingUser).WithMany(b => b.MQ_Logs_ImpersonatingUserId).HasForeignKey(c => c.ImpersonatingUserId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_MQ_LOGS__ImpersonatingUser");
            builder.HasOne(a => a.User).WithMany(b => b.MQ_Logs_UserId).HasForeignKey(c => c.UserId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_MQ_LOGS__User");
        }
    }

}
// </auto-generated>
